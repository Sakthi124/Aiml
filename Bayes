

import pandas as pd

from sklearn.naive_bayes import CategoricalNB

from sklearn.preprocessing import LabelEncoder

df = pd.read_excel("weather_data.xlsx")

# Encode all categorical columns using label encoding

label_encoders = {}

for column in df.columns:

 le = LabelEncoder()

 df[column] = le.fit_transform(df[column])

 label_encoders[column] = le

# Separate the dataset into input features and target variable

X = df[['Outlook', 'Temperature', 'Humidity', 'Windy']]

y = df['Play']

# Train a Naive Bayes classifier on the dataset

model = CategoricalNB()

model.fit(X, y)

# Transform a new input instance using the same label encoders

test_instance = [

 label_encoders['Outlook'].transform(['Rainy'])[0],

 label_encoders['Temperature'].transform(['Cool'])[0],

 label_encoders['Humidity'].transform(['High'])[0],

 label_encoders['Windy'].transform([True])[0]

]

# Predict the class label for the input instance and decode it

predicted = model.predict([test_instance])

predicted_label = label_encoders['Play'].inverse_transform(predicted)

print("Predicted outcome for 'Play':", predicted_label[0]
